{"version":3,"sources":["components/searchbar/Searchbar.module.css","components/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/imageGallery/ImageGallery.module.css","components/button/Button.module.css","components/spinner/Spinner.module.css","components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/button/Button.jsx","components/modal/Modal.jsx","components/spinner/Spinner.jsx","App.js","components/API/API.jsx","index.js"],"names":["module","exports","toast","configure","Searchbar","state","query","searchQuery","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","error","className","s","SearchForm","this","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","itemId","webformatURL","tags","onClick","src","alt","ImageGallery","data","openModal","getImageForModal","map","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","largeImageUrl","Spinner","spinner","color","height","width","timeout","App","showModal","images","loading","page","modalContent","pageIncrement","handleFormSubmit","toggleModal","element","find","largeImageURL","prevProps","prevState","currentQuery","currentPage","prevQuery","prevPage","axios","get","then","res","status","hits","image","scrollTo","top","documentElement","scrollHeight","behavior","length","warn","transition","Bounce","Error","message","Flip","finally","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e43b226.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2tzmH\",\"SearchForm\":\"Searchbar_SearchForm__1mb-1\",\"SearchForm-button\":\"Searchbar_SearchForm-button__2tpzd\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2fuS-\",\"SearchForm-input\":\"Searchbar_SearchForm-input__17blb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__hr8AC\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2Q70Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__quBKt\",\"Modal\":\"Modal_Modal__zdaEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__VywSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__38t_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__572ds\"};","import React, {Component} from 'react';\r\nimport { toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { IoIosSearch } from \"react-icons/io\";\r\nimport s from '../searchbar/Searchbar.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\ntoast.configure()\r\n\r\nexport default class Searchbar extends Component{\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n  \r\n  searchQuery = e  => { this.setState({ query:  e.currentTarget.value})}\r\n\r\n  handleSubmit = e => {\r\n        e.preventDefault();\r\n         if (this.state.query.trim() === '') {\r\n          toast.error('Please, enter a name!');\r\n          return;\r\n        }\r\n        this.setState({query: ''})\r\n        this.props.onSubmit(this.state.query);\r\n    }\r\n\r\nrender(){\r\n  return (\r\n     <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n        <button type=\"submit\" className={s['SearchForm-button']}>< IoIosSearch/>\r\n        </button>\r\n\r\n        <input\r\n          name='query'\r\n          className={s['SearchForm-input']}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={this.searchQuery}\r\n          value={this.state.query}\r\n        />\r\n      </form>\r\n    </header>\r\n   )\r\n}\r\n}\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport s from '../imageGalleryItem/ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({ itemId, webformatURL, tags, onClick}) {\r\n  return (\r\n     <li className={s.ImageGalleryItem}  >\r\n        <img className={s['ImageGalleryItem-image']} src={webformatURL} alt={tags} onClick={() => { onClick(itemId) }} />\r\n     </li>\r\n    )\r\n\r\n}\r\n//  {}()   :\r\nImageGalleryItem.propTypes = {\r\n      onClick:PropTypes.func,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n  \r\n}; ","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from 'components/imageGalleryItem/ImageGalleryItem';\r\nimport s from '../imageGallery/ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ data,openModal, getImageForModal}) {\r\n  return (\r\n      <ul className={s.ImageGallery} onClick={openModal}>\r\n          {data.map(({ id, webformatURL, tags }) => {\r\n            return (\r\n              <ImageGalleryItem \r\n                key={id}\r\n                webformatURL={webformatURL }\r\n                tags={tags}\r\n                onClick={getImageForModal}\r\n                itemId={id}\r\n              />\r\n            );\r\n      })}\r\n      </ul>\r\n    )\r\n   }\r\n\r\n\r\nImageGallery.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    })\r\n  ),\r\n  openModal: PropTypes.func,\r\n  getImageForModal: PropTypes.func,\r\n};","import s from '../button/Button.module.css';\r\n\r\nexport default function Button({onClick}) {\r\n    return (\r\n        <button type='button' onClick={onClick} className={s.Button} >More</button>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from '../modal/Modal.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        largeImageUrl: PropTypes.string.isRequired,\r\n        \r\n    };\r\n    componentDidMount() {\r\n       \r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    handleKeyDown = (e) => {\r\n            if (e.code === 'Escape') {\r\n                this.props.onClose()\r\n            }\r\n            \r\n    }\r\n    handleBackdropClick = (e) => {\r\n            if (e.currentTarget === e.target) {\r\n                this.props.onClose()\r\n            }\r\n            \r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    \r\n    //   toggleModal = ()=>{}\r\n    render(){\r\n        \r\n        return createPortal(\r\n        <div className={s.Overlay} onClick={this.handleBackdropClick} >\r\n            <div className={s.Modal}>\r\n                    <img src={this.props.largeImageUrl} alt=\"\" />\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n        // <button>Modal</button>\r\n    )\r\n\r\n    }\r\n}\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from '../spinner/Spinner.module.css';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n         \r\n        <div>\r\n            <Loader\r\n                className = { s.spinner }\r\n                    type=\"ThreeDots\"\r\n                    color=\"#3f51b5\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs  \r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { toast, Flip, Bounce } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport Searchbar from 'components/searchbar/Searchbar'\nimport ImageGallery from 'components/imageGallery/ImageGallery'\nimport Button from 'components/button/Button'\nimport Modal from 'components/modal/Modal'\nimport Spinner from 'components/spinner/Spinner'\nimport API from 'components/API/API'\n\ntoast.configure()\n\nfunction scrollPageDown() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\n\nexport default class App extends Component {\n  state = {\n    showModal: false,\n    images: [],\n    loading: false,\n    query: '',\n    page: 1,\n    largeImageUrl: [],\n    modalContent:'',\n      \n  }\n\n  pageIncrement = () => {\n    this.setState({ page: this.state.page + 1 })\n  };\n\n  // updateContent = () => {\n  //   this.pageIncrement()\n  //   this.getImages(this.state.query, this.pageIncrement());\n  //   this.setState({ loading: true });\n  // }\n  handleFormSubmit = query => {\n   \n    this.setState({ query, page: 1 , loading: true })\n  };\n  \n  componentDidUpdate(prevProps, prevState) {\n    \n    const { query: currentQuery, page: currentPage } = this.state;\n    const { query: prevQuery, page: prevPage } = prevState;\n\n    if (currentQuery !== prevQuery || currentPage !== prevPage) {\n            \n      // this.setState({ loading: true })\n      this.setState({ loading: true })\n      API(currentQuery, currentPage).then(res => {\n        if (res.status === 200) {\n          const { hits } = res.data;\n          this.setState(\n            {\n              images: [...this.state.images, ...hits],\n              query: currentQuery,\n              largeImageUrl: res.data.hits.map(image => { return image.largeImageURL })\n            },\n            \n          )\n        //  console.log(res.data.hits.map(image =>{return image.webformatURL}))\n        };\n        scrollPageDown();\n    \n        if (this.state.images.length === 0) {\n          toast.warn('There are no images. Try another request, please', {\n            transition: Bounce\n          });\n        }\n                \n        if (res.status === 404) {\n          throw new Error(res.message || toast.error('Images are not exist', { transition: Flip }));\n        }\n                \n      }).finally(this.setState({ loading: false }))\n    };\n  }\n  toggleModal = () => {\n    \n    this.setState(({ showModal }) => ({\n      showModal: !showModal\n    }))\n  };\n\n  getImageForModal = (itemId) => {\n    const { images } = this.state;\n    const element = images.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  \n  };\n\n  \n  \n  \n  \n  componentDidMount(query, page ) {\n    this.setState({ query:'', page: 1 })\n  };\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery data={this.state.images} getImageForModal={this.getImageForModal} openModal={ this.toggleModal}/>\n        {this.state.loading === true && <Spinner />}\n        {this.state.images.length !== 0 && <Button onClick={this.pageIncrement} />}\n        {this.state.showModal && <Modal onClose={this.toggleModal} largeImageUrl={this.state.modalContent} />}\n      </>\n    )\n           \n  };\n\n}","import axios from 'axios';\r\n\r\nconst API_KEY = '23477819-44226e1e125dfcf9362a81201';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default  function  API (query, page) {\r\n      return axios.get(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&${page}=1&per_page=12&key=${API_KEY}`);\r\n\r\n   }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}